apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//必须引入这几个插件
apply plugin: 'maven'
apply plugin: 'signing'
android {
    compileSdkVersion rootProject.ext.buildConfig.compile_sdk_version
    buildToolsVersion rootProject.ext.buildConfig.build_tools_version

    defaultConfig {
        minSdkVersion rootProject.ext.buildConfig.min_sdk_version
        targetSdkVersion rootProject.ext.buildConfig.target_sdk_version
        versionCode 1
        versionName rootProject.ext.moduleVersion.kotlin_android_tools

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        appTest {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //解决Using flatDir should be avoided because it doesn't support any meta-data formats.警告
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.appcompat:appcompat:${rootProject.ext.libVersion.appcompat_version}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //kotlin工具类
    compileOnly project(':KotlinCustomToolsFromLorenWang')
    //自定义工具类
    compileOnly project(':AndroidCustomToolsFromLorenWang')
}
def moduleName = "AndroidKotlinCustomToolsFromLorenWang"
def moduleDescription = "Android的kotlin语言自定义工具库"
def moduleVersion = android.defaultConfig.versionName
// 编译版本和编码配置
repositories {
    mavenCentral()
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.compile
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title moduleName
    }
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
//上传
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatype_account, password: sonatype_password)
            }

            pom.project {
                name moduleName
                version moduleVersion
                groupId project_groupId
                description moduleDescription
                packaging 'jar'
                // optionally artifactId can be defined here
                description moduleDescription
                url project_webSiteUrl
                scm {
                    connection project_gitUrl // Git仓库地址。
                    developerConnection project_gitUrl // Git仓库地址。
                    url project_webSiteUrl // 项目主页。
                }
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = userInfo_userId
                        name = userInfo_userName
                        email = userInfo_userEmail
                    }
                }
            }
        }
    }
}
//签名配置
signing {
    sign configurations.archives
}
