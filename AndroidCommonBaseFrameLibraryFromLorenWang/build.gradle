apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//必须引入这几个插件
apply plugin: 'maven'
apply plugin: 'signing'
android {
    compileSdkVersion rootProject.ext.buildConfig.compile_sdk_version
    buildToolsVersion rootProject.ext.buildConfig.build_tools_version

    defaultConfig {
        minSdkVersion rootProject.ext.buildConfig.min_sdk_version
        targetSdkVersion rootProject.ext.buildConfig.target_sdk_version
        versionCode 1
        versionName rootProject.ext.moduleVersion.android_frame

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        appTest {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    //解决Using flatDir should be avoided because it doesn't support any meta-data formats.警告
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}
dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly "androidx.appcompat:appcompat:${rootProject.ext.libVersion.appcompat_version}"
    compileOnly "androidx.recyclerview:recyclerview:${rootProject.ext.libVersion.recyclerview_version}"
    //安卓自定义组件框架库
    compileOnly project(':AndroidCustomViewsFromLorenWang')
    //安卓自定义工具框架库
    compileOnly project(':AndroidCustomToolsFromLorenWang')
    //安卓自定义动画框架库
    compileOnly project(':AndroidAnimFromLorenWang')
    //java自定义工具框架库
    compileOnly project(':JavaCustomToolsFromLorenWang')
    //java数据格式化工具框架库
    compileOnly project(':JavaDataParseFromLorenWang')
    //kotlin工具框架库
    compileOnly project(':AndroidKotlinCustomToolsFromLorenWang')
    //kotlin工具框架库
    compileOnly project(':KotlinCustomToolsFromLorenWang')
    // RxJava 引用
    compileOnly 'io.reactivex.rxjava2:rxjava:2.2.13'
    compileOnly 'io.reactivex.rxjava2:rxandroid:2.1.1'
    compileOnly 'com.squareup.retrofit2:retrofit:2.6.0'
    compileOnly 'com.squareup.retrofit2:converter-gson:2.6.0'
    compileOnly 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    //图片选择框架
    compileOnly 'io.github.lucksiege:pictureselector:v2.7.3-rc03'
    //glide图片加载
    compileOnly "com.github.bumptech.glide:glide:${rootProject.ext.libVersion.glide_version}"
    //Toast提示框架
    compileOnly 'com.github.hss01248:Toasty:2.0.6'
    //列表数据加载
    compileOnly 'com.scwang.smart:refresh-layout-kernel:2.0.3'
    //列表数据加载-经典刷新头
    compileOnly  'com.scwang.smart:refresh-header-classics:2.0.3'
    //列表数据加载-雷达刷新头
    compileOnly  'com.scwang.smart:refresh-header-radar:2.0.3'
    //列表数据加载-虚拟刷新头
    compileOnly  'com.scwang.smart:refresh-header-falsify:2.0.3'
    //列表数据加载-谷歌刷新头
    compileOnly  'com.scwang.smart:refresh-header-material:2.0.3'
    //列表数据加载-二级刷新头
    compileOnly  'com.scwang.smart:refresh-header-two-level:2.0.3'
    //列表数据加载-球脉冲加载
    compileOnly  'com.scwang.smart:refresh-footer-ball:2.0.3'
    //列表数据加载-经典加载
    compileOnly  'com.scwang.smart:refresh-footer-classics:2.0.3'
    //微信开放平台
    //noinspection GradleDynamicVersion
    compileOnly 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //支付宝支付
    compileOnly files('libs/alipaySdk.aar')
    //微博相关
    compileOnly files('libs/openDefault-10.10.0.aar')
    //qq相关
    compileOnly 'com.tencent.tauth:qqopensdk:3.52.0'
    //安卓下拉刷新库
    compileOnly "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.ext.libVersion.swiperefreshlayout_version}"

}

def moduleName = "AndroidCommonBaseFrameLibraryFromLorenWang"
def moduleDescription = "安卓通用基础框架包"
def moduleVersion = android.defaultConfig.versionName
// 编译版本和编码配置
repositories {
    mavenCentral()
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
    classpath += configurations.compile
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title moduleName
    }
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
//上传
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatype_account, password: sonatype_password)
            }

            pom.project {
                name moduleName
                version moduleVersion
                groupId project_groupId
                description moduleDescription
                packaging 'jar'
                // optionally artifactId can be defined here
                description moduleDescription
                url project_webSiteUrl
                scm {
                    connection project_gitUrl // Git仓库地址。
                    developerConnection project_gitUrl // Git仓库地址。
                    url project_webSiteUrl // 项目主页。
                }
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = userInfo_userId
                        name = userInfo_userName
                        email = userInfo_userEmail
                    }
                }
            }
        }
    }
}
//签名配置
signing {
    sign configurations.archives
}
