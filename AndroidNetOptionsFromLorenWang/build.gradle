apply plugin: 'com.android.library'
//必须引入这2个插件
apply plugin : 'com.github.dcendents.android-maven'
apply plugin : 'com.jfrog.bintray'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //第三方网络请求框架
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.11.0'
}



def moduleName = "AndroidNetOptionsFromLorenWang"
def moduleDescription = "Android自定义网络请求库"
version '1.0.2'
Properties properties = new Properties();
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def bintrayUser = properties.getProperty("bintray.user")
def bintrayKey = properties.getProperty("bintray.apikey")
def bintrayGpgPwd = properties.getProperty("bintray.gpg.password")
def userId = properties.getProperty("userinfo.userId")
def userName = properties.getProperty("userinfo.userName")
def userEmail = properties.getProperty("userinfo.userEmail")
def projectGitUrl = properties.getProperty("project.gitUrl")
def projectWebsiteUrl = properties.getProperty("project.webSiteUrl")
def projectGroupId = properties.getProperty("project.groupId")
def muduleVersion = version

install{
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name moduleName// 可选，项目名称。
                description moduleDescription// 可选，项目描述。
                url projectWebsiteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id userId// 开发者的id。
                        name userName // 开发者名字。
                        email userEmail // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection projectGitUrl // Git仓库地址。
                    developerConnection projectGitUrl // Git仓库地址。
                    url projectWebsiteUrl // 项目主页。
                }
                dependencies{
                    dependency{
                        groupId projectGroupId
                        version muduleVersion
                        artifactId moduleName
                    }
                }
            }
        }
    }
}
//
//task sourcesJar(type : Jar) { //这个task不需要修改，发布内容为jar类型
//    classifier = 'sources'
//}
//
//task javadocJar(type : Jar, dependsOn : javadoc) { //这里也不需要修改
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts { //这里不需要修改，发布内容包括javadocJar和sourcesJar
//    archives javadocJar
//    archives sourcesJar
//}

bintray {
    user = bintrayUser
    key = bintrayKey
    configurations = ['archives']
    group = projectGroupId
    version = muduleVersion

    pkg {
        repo = "maven"
        name = moduleName
        websiteUrl = projectWebsiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish true
        version{
            gpg{
                sign = true
                passphrase = bintrayGpgPwd
            }
        }
    }
}
repositories {
    mavenCentral()
}


